[main]
    # Where Puppet stores dynamic and growing data.  
    # The default value is '/var/puppet'.
    vardir = /var/lib/puppet
    
    # The Puppet log directory.
    # The default value is '$vardir/log'.
    logdir = /var/log/puppet
    
    # Where Puppet PID files are kept.
    # The default value is '$vardir/run'.
    rundir = /var/run/puppet
    
    # Where SSL certificates are kept.
    # The default value is '$confdir/ssl'.
    ssldir = $vardir/ssl
 
    # Logging stuff
    syslogfacility = local3

    # Enable pluginsync
    pluginsync = true

<% if @is_puppetmaster -%>
<% if @dns_alt_names -%>
    dns_alt_names = <%= @dns_alt_names %>
<% end -%>
<% end -%>
<% if @use_dns_srv_domain -%>
    use_srv_records = true
    srv_domain = <%= scope.lookupvar('::domain') %>
<% end -%>     

<%if @preferred_puppet_environment -%>
    # Setting up the environment
    environment = <%= @preferred_puppet_environment %>
<% end -%>
[agent]
    # Port Puppet master is listening
    masterport = 8140

    # The file in which puppetd stores a list of the classes
    # associated with the retrieved configuratiion.  Can be loaded in
    # the separate ``puppet`` executable using the ``--loadclasses``
    # option.
    # The default value is '$confdir/classes.txt'.
    classfile = $vardir/classes.txt

    # Where puppetd caches the local configuration.  An
    # extension indicating the cache format is added automatically.
    # The default value is '$confdir/localconfig'.
    localconfig = $vardir/localconfig

    # How often puppetd applies the client configuration; in seconds.
    # The default value is '1800'.
    runinterval = 1800 

    # Send reports to the puppetca/puppetboard
<%if @puppet_report_server -%>
    report = true
    reportserver = <%= @puppet_report_server %>
<% end %>

<% if @is_puppetmaster -%>
[master]
<% unless @is_ca -%>
    ca = false
<% end -%>
<% if @use_directory_environments -%>
    environmentpath = $confdir/environments 
<% else -%>
    environment = production
    modulepath = <%= @puppetmaster_modulepath.collect {|mod| "/etc/puppet/environments/$environment/#{mod}.join(':'):/usr/share/puppet/modules" } %>
    manifest =  /etc/puppet/environments/$environment/manifests/site.pp
<% end %>


    # Using PuppetDB for backend DB
    storeconfigs = true
    storeconfigs_backend = puppetdb

    ssl_client_header = HTTP_X_CLIENT_DN
    ssl_client_verify_header = HTTP_X_CLIENT_VERIFY

    reports = log,puppetdb
<% end -%>
